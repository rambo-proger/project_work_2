Пункты документации:

* где располагается репозиторий с кодом, как посмотреть существующий код;

	- репозиторий с кодом располагается по адресу: https://github.com/rambo-proger/project_work_2
	- существующий код можно посмотреть через браузер во встроенных редакторах кода GitHub или в
	  локальном репозитории
	
* как устроен процесс внесения своих изменений в основную кодовую базу;

	- когда изменения и правки в локальном репозитории завершены, то следует выполнить 
	  последовательность команд:
	  git add . ; git commit -m "commentary text" ; git pull
	  
	- далее следует зайти на GitHub и нажать "Compare & pull request", выбрать ветку для         
	  пулл-реквеста, нажать "Merge pull request" далее по ходу ветки необходимое количество раз
	  
	- можно по желанию прокомментировать строки с кодом в файлах что были изменены по ходу 
	  выполнения пулл-реквеста

* каковы правила именования веток;

    - в рамках данного проекта побочные ветки следует называть по следующему шаблону:
	  branch-[a-z]_[0-9][0-9][0-9]  https://www.w3schools.com/python/python_regex.asp
	
* как настроить свою среду разработки, требуется прикрепить ссылку на лежащий в проекте конфиг;

    - чтобы настроить свою среду разработки требуется скачать и установить PyCharm Community, Git,
	  зайти в папку на диске C:\ где планируете делать задание и в контекстном меню выполнить 
	  команду 'Git Bash Here'
	  
	- настройка среды и конфига произошла в пункте 3. данного задания. Были выполнены команды:
	  git config --global user.name "Kirill Makovskiy"
	  git config --global user.email kirill.a.makovskiy@gmail.com
	  git config --global alias.history git log --graph
	  также в PyCharm была настроена синхронизация с GitHub
	  
	- лежащий в проекте конфиг находится по адресу         
	  https://github.com/rambo-proger/project_work_2/blob/main/.gitconfig

* инструкция для младших сотрудников по слиянию веток, какие команды надо выполнить, чтобы:

	- создать свою ветку;
	  выполните команду git branch [you_branch_name], затем git checkout [you_branch_name]
	  
	- внести изменения в неё;
	  внесите в папку с файлами локального репозитория все необходимые изменения, затем 
	  исполните команды git add. ; git commit -m "commentary text" ; git pull
	
	- слить эти изменения с основной кодовой базой.
	  зайдите на GitHub и выполните до конца последовательность "Compare & pull request"
